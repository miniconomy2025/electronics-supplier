CREATE OR REPLACE PROCEDURE create_material_order(
    IN p_supplier_id INT,
    IN p_material_id INT,
    IN p_remaining_amount INT,
    OUT p_created_order_id INT
) LANGUAGE plpgsql AS $$
DECLARE
    v_order_id INT;
BEGIN
<<<<<<< HEAD:esAPI/Migrations/V8__Create_Order_With_Items.sql.ignore
    IF NOT EXISTS (SELECT 1 FROM companies WHERE company_id = p_supplier_id) THEN
=======
    -- Validate supplier
    IF NOT EXISTS (SELECT 1 FROM material_suppliers WHERE supplier_id = p_supplier_id) THEN
>>>>>>> d36f86e28ae5cae41c0ce64ec7a87996439cbd88:esAPI/Migrations/V8__Create_Order_With_Items.sql
        RAISE EXCEPTION 'Supplier ID % does not exist', p_supplier_id;
    END IF;

    -- Validate material
    IF NOT EXISTS (SELECT 1 FROM materials WHERE material_id = p_material_id) THEN
        RAISE EXCEPTION 'Material ID % does not exist', p_material_id;
    END IF;

<<<<<<< HEAD:esAPI/Migrations/V8__Create_Order_With_Items.sql.ignore
    FOR item_record IN
        SELECT * FROM jsonb_to_recordset(p_items) AS x(material_id INT, quantity_kg INT, price_per_kg NUMERIC(10,2))
    LOOP
        IF item_record.material_id IS NULL OR NOT EXISTS (SELECT 1 FROM materials WHERE material_id = item_record.material_id) THEN
            RAISE EXCEPTION 'Invalid Material ID % provided in order items', item_record.material_id;
        END IF;
        IF item_record.quantity_kg IS NULL OR item_record.quantity_kg <= 0 THEN
            RAISE EXCEPTION 'Quantity for material ID % must be a positive integer', item_record.material_id;
        END IF;
        INSERT INTO material_order_items (material_id, quantity_kg, price_per_kg, order_id)
        VALUES (item_record.material_id, item_record.quantity_kg, item_record.price_per_kg, v_order_id);
    END LOOP;
=======
    -- Validate remaining amount
    IF p_remaining_amount <= 0 THEN
        RAISE EXCEPTION 'Remaining amount must be a positive integer';
    END IF;

    -- Create order
    INSERT INTO material_orders (supplier_id, material_id, remaining_amount, ordered_at, received_at)
    VALUES (p_supplier_id, p_material_id, p_remaining_amount, NOW(), NULL)
    RETURNING order_id INTO v_order_id;
>>>>>>> d36f86e28ae5cae41c0ce64ec7a87996439cbd88:esAPI/Migrations/V8__Create_Order_With_Items.sql

    p_created_order_id := v_order_id;

EXCEPTION
    WHEN others THEN
        RAISE EXCEPTION 'Error creating material order: %', SQLERRM;

END;
$$;
