name: Terraform Deploy

on:
  push:
    branches:
      - main
      - dev
      - tevlen/deployment
    paths:
      - 'infrastructure/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-terraform
          aws-region: af-south-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Init
        run: terraform init -backend-config="backend.config"

      - name: "Create terraform.tfvars"
        run: |
            echo 'project_name = "${{ secrets.PROJECT_NAME }}"' >> terraform.tfvars
            echo 'aws_region = "${{ secrets.AWS_REGION }}"' >> terraform.tfvars
            echo 'backend_bucket = "${{ secrets.BUCKET_NAME }}"' >> terraform.tfvars
            echo 'backend_key = "${{ secrets.BACKEND_KEY }}"' >> terraform.tfvars
            echo 'backend_dynamodb_table = "${{ secrets.BACKEND_DYNAMODB }}"' >> terraform.tfvars
            echo 'ec2_instance_count = 2' >> terraform.tfvars
            echo 'key_name = "ec2"' >> terraform.tfvars
            echo 'db_username = "${{ secrets.DB_USERNAME }}"' >> terraform.tfvars
            echo 'db_password = "${{ secrets.DB_PASSWORD }}"' > terraform.tfvars
            echo 'db_name = "${{ secrets.DB_NAME }}"' >> terraform.tfvars
            echo 'budget_email = ${{ secrets.BUDGET_EMAILS }}' >> terraform.tfvars

      - name: Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve